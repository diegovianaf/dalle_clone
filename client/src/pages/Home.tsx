import { useEffect, useState } from 'react'
import { Card, FormField, Loader } from '../components'

const RenderCards = ({
  data,
  title,
}: {
  data: any[] | null
  title: string
}) => {
  if (data?.length) {
    return (
      <>
        {data.map((post) => (
          <Card key={post._id} {...post} />
        ))}
      </>
    )
  }

  return (
    <h2 className='mt-5 font-bold text-indigo-700	text-xl uppercase'>{title}</h2>
  )
}

const Home = () => {
  const [loading, setLoading] = useState<boolean>(false)
  const [allPosts, setAllPosts] = useState<any[] | null>(null)
  const [searchText, setSearchText] = useState<string>("")

  const fetchPosts = async () => {
    setLoading(true)

    try {
      const response = await fetch("http://localhost:8080/api/v1/post", {
        method: "GET",
        headers: {
          "Content-Type": "application/json",
        },
      })

      if (response.ok) {
        const result = await response.json()
        setAllPosts(result.data.reverse())
      }
    } catch (err) {
      alert(err)
    } finally {
      setLoading(false)
    }
  }

  useEffect(() => {
    fetchPosts()
  }, [])

  return (
    <section className='max-w-7xl mx-auto'>
      <div>
        <h1 className='font-extrabold text-slate-900 text-3xl'>
          The Community ShowCase
        </h1>
        <p className='mt-2 text-slate-600 text-base max-w-lg'>
          Browse through a collection of imaginative and visually stunning
          images generated by DALL-E AI
        </p>
      </div>

      <div className='mt-16'>
        <FormField />
      </div>

      <div className='mt-10'>
        {loading ? (
          <div className='flex justify-center items-center'>
            <Loader />
          </div>
        ) : (
          <>
            {searchText && (
              <h2 className='font-medium text-slate-600 text-xl mb-3'>
                Showing results for{''}
                <span className='text-slate-900'>{searchText}</span>
              </h2>
            )}
            <div className='grid lg:grid-cols-4 sm:grid-cols-3 xs:grid-cols-2 grid-cols-1 gap-3'>
              {searchText ? (
                <RenderCards
                  data={[]}
                  title='No search results found'
                  key='no-search-results'
                />
              ) : (
                <RenderCards
                  data={allPosts}
                  title='No posts yet'
                  key='no-posts-found'
                />
              )}
            </div>
          </>
        )}
      </div>
    </section>
  )
}

export default Home
